{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAWC,SAASC,cAAc,SAuBxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MA/BPL,EAASY,iBAAiB,UAE1B,SAAoBC,GAClBA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAASgB,OAAOC,MAAOF,GAAK,EAC9CZ,EACEY,EAAI,EACJG,OAAOlB,EAASK,MAAMY,OAASC,OAAOlB,EAASmB,KAAKF,OAASF,GAE5DK,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAAvB,GAASwB,OAAOC,QACd,uBAAqBnB,QAAiBC,UAGzCmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAAvB,GAASwB,OAAOG,QACd,sBAAoBrB,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formElem = document.querySelector('.form');\nformElem.addEventListener('submit', formSubmit);\n\nfunction formSubmit(event) {\n  event.preventDefault();\n  for (let i = 0; i < formElem.amount.value; i += 1) {\n    createPromise(\n      i + 1,\n      Number(formElem.delay.value) + Number(formElem.step.value) * i\n    )\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formElem","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","i","amount","value","Number","step","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.7faf9097.js.map"}